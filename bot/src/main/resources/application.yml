app:
  telegram-token: ${TELEGRAM_TOKEN}
  scrapper-api: ${SCRAPPER_BASE_URL:http://localhost:8080}
  kafka:
    server: ${KAFKA_BASE_URL:http://localhost:9092}
    updates-topic:
      name: updates
  retry:
    http-statuses: 429, 500
    type: linear
    max-attempts: 5
    config:
      initial-interval-millis: 1000
      max-interval-millis: 50000
      multiplier: 2
  micrometer:
    processed-messages-counter:
      name: messages.processed
      description: Number of processed messages from telegram api

spring:
  application:
    name: bot
  cache:
    cache-names:
      - bot-rate-limit
    caffeine:
      spec: maximumSize=200000,expireAfterAccess=60s
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
  jackson:
    time-zone: UTC

server:
  port: 8090

bucket4j:
  filters:
    - cache-name: bot-rate-limit
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"Too Many Requests\" }"
      rate-limits:
        - bandwidths:
            - capacity: 100
              refill-speed: interval
              time: 1
              unit: minutes
      url: /.*

springdoc:
  swagger-ui:
    path: /swagger-ui

logging:
  config: classpath:log4j2-plain.xml

management:
  server:
    port: 8091
  endpoints:
    web:
      base-path: /
      exposure:
        include: health,info,prometheus
      path-mapping:
        prometheus: metrics
  metrics:
    tags:
      application: ${spring.application.name}
